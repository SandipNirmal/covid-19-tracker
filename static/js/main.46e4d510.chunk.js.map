{"version":3,"sources":["utils/response.js","hooks/useStats.js","components/Card.js","utils/utils.js","components/Stats.js","components/CountryItem.js","components/Loader.js","components/CountryList.js","components/CountrySelector.js","utils/storage.js","components/Header.js","components/Tabs.js","App.js","serviceWorker.js","index.js"],"names":["CACHE_EXPIRY","responseCache","useStats","url","EXPIRY","useState","stats","setStats","loading","setLoading","error","setError","useEffect","a","expiry","Date","now","data","fetch","then","res","json","catch","err","fetchData","BACKGROUND_COLORS","success","warning","info","danger","COLORS","dark","getStyle","variant","backgroundColor","color","Card","title","count","total","percent","increase","toFixed","className","style","toLocaleString","ISO3CountryCodes","AFG","ALA","ALB","DZA","ASM","AND","AGO","AIA","ATA","ATG","ARG","ARM","ABW","AUS","AUT","AZE","BHS","BHR","BGD","BRB","BLR","BEL","BLZ","BEN","BMU","BTN","BOL","BES","BIH","BWA","BVT","BRA","IOT","VGB","BRN","BGR","BFA","BDI","KHM","CMR","CAN","CPV","CYM","CAF","TCD","CHL","CHN","CXR","CCK","COL","COM","COK","CRI","HRV","CUB","CUW","CYP","CZE","COD","DNK","DJI","DMA","DOM","TLS","ECU","EGY","SLV","GNQ","ERI","EST","ETH","FLK","FRO","FJI","FIN","FRA","GUF","PYF","ATF","GAB","GMB","GEO","DEU","GHA","GIB","GRC","GRL","GRD","GLP","GUM","GTM","GGY","GNB","GIN","GUY","HTI","HMD","HND","HKG","HUN","ISL","IND","IDN","IRN","IRQ","IRL","IMN","ISR","ITA","CIV","JAM","JPN","JEY","JOR","KAZ","KEN","KIR","XKX","KWT","KGZ","LAO","LVA","LBN","LSO","LBR","LBY","LIE","LTU","LUX","MAC","MKD","MDG","MWI","MYS","MDV","MLI","MLT","MHL","MTQ","MRT","MUS","MYT","MEX","FSM","MDA","MCO","MNG","MNE","MSR","MAR","MOZ","MMR","NAM","NRU","NPL","NLD","NCL","NZL","NIC","NER","NGA","NIU","NFK","PRK","MNP","NOR","OMN","PAK","PLW","PSE","PAN","PNG","PRY","PER","PHL","PCN","POL","PRT","PRI","QAT","COG","REU","ROU","RUS","RWA","BLM","SHN","KNA","LCA","MAF","SPM","VCT","WSM","SMR","STP","SAU","SEN","SRB","SYC","SLE","SGP","SXM","SVK","SVN","SLB","SOM","ZAF","SGS","KOR","SSD","ESP","LKA","SDN","SUR","SJM","SWZ","SWE","CHE","SYR","TWN","TJK","TZA","THA","TGO","TKL","TON","TTO","TUN","TUR","TKM","TCA","TUV","VIR","UGA","UKR","ARE","GBR","UMI","URY","USA","UZB","VUT","VAT","VEN","VNM","WLF","ESH","YEM","ZMB","ZWE","combineCountryData","countries","worldwide","confirmed","recovered","deaths","active","lastUpdate","forEach","country","countryRegion","iso3","countriesData","Object","keys","map","sortOptions","Confirmed","Recovered","Deaths","React","memo","date","previousDay","value","toLocaleDateString","weekday","year","month","day","hour","minute","CountItem","type","Loader","CountryList","countryWiseStats","setCountryWiseStats","updatedData","setUpdatedData","hasError","sort","b","CountryRow","index","key","htmlFor","id","onChange","e","val","slice","sortByCategory","target","entries","option","filter","toLowerCase","includes","trim","filterByCountry","length","height","width","itemSize","itemCount","CountrySelector","localStorage","getItem","selectedCountryCode","setSelectedCountryCode","setItem","defaultValue","code","Stats","Header","Tab","name","handleClick","classNames","selected","onClick","TabHeder","selectedIndex","tabs","Tabs","selectedTab","setSelectedTab","component","lazy","App","fallback","daily","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.46e4d510.chunk.js","sourcesContent":["// Cache Expiry for 5 minutes\nexport const CACHE_EXPIRY = 5 * 60 * 1000;\n\n/**\n * Response Cache\n */\nexport const responseCache = {};\n","import { useState, useEffect } from 'react';\n\nimport { responseCache, CACHE_EXPIRY } from '../utils/response';\n\nfunction useStats(url, EXPIRY = CACHE_EXPIRY) {\n  const [stats, setStats] = useState();\n  const [loading, setLoading] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      setError();\n\n      if (responseCache[url] && responseCache[url].expiry > Date.now()) {\n        setStats(responseCache[url].data);\n        setLoading(false);\n      } else {\n        const data = await fetch(url)\n          .then((res) => res.json())\n          .catch((err) => {\n            setError(err || 'Failed to load data!');\n          });\n\n        if (data) {\n          setStats(data);\n          responseCache[url] = {\n            data,\n            expiry: Date.now() + EXPIRY,\n          };\n        } else {\n          setError('Failed to load data!');\n        }\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, [url, EXPIRY]);\n\n  return {\n    stats,\n    loading,\n    error,\n  };\n}\n\nexport default useStats;\n","import React from 'react';\n\nimport '../styles/card.css';\n\nconst BACKGROUND_COLORS = {\n  success: '#28a745',\n  // success: '#009933',\n  warning: '#ffc107',\n  info: '#17a2b8',\n  // danger: '#dc3545'\n  danger: '#282f36',\n};\n\nconst COLORS = {\n  success: '#ffffff',\n  warning: '#ffffff',\n  info: '#ffffff',\n  danger: '#ffffff',\n  dark: '#282f36',\n};\n\nconst getStyle = (variant) => {\n  return variant\n    ? {\n        backgroundColor: BACKGROUND_COLORS[variant] || '#f6f6f6',\n        color: COLORS[variant] || COLORS.dark,\n      }\n    : {};\n};\n\nfunction Card({ title, count, total, variant, increase }) {\n  const percent = total ? ((count / total) * 100).toFixed(2) : 0;\n\n  return (\n    <div className=\"card\" style={getStyle(variant)}>\n      <h3 className=\"card-title\">{title}</h3>\n\n      <div className=\"card-info\">\n        <div className=\"flex align-center wrap\">\n          <h2 className=\"count\">{count.toLocaleString()}</h2>\n\n         {/*increase ? (\n            <span>\n              ( ↑ {increase} )\n            </span>\n          ) : null*/}\n\n        </div>\n        <h2 className=\"count\">{`${percent}%`}</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","/**\n * List of countries with ISO3 code\n */\nexport const ISO3CountryCodes = {\n  AFG: 'Afghanistan',\n  ALA: 'Aland Islands',\n  ALB: 'Albania',\n  DZA: 'Algeria',\n  ASM: 'American Samoa',\n  AND: 'Andorra',\n  AGO: 'Angola',\n  AIA: 'Anguilla',\n  ATA: 'Antarctica',\n  ATG: 'Antigua and Barbuda',\n  ARG: 'Argentina',\n  ARM: 'Armenia',\n  ABW: 'Aruba',\n  AUS: 'Australia',\n  AUT: 'Austria',\n  AZE: 'Azerbaijan',\n  BHS: 'Bahamas',\n  BHR: 'Bahrain',\n  BGD: 'Bangladesh',\n  BRB: 'Barbados',\n  BLR: 'Belarus',\n  BEL: 'Belgium',\n  BLZ: 'Belize',\n  BEN: 'Benin',\n  BMU: 'Bermuda',\n  BTN: 'Bhutan',\n  BOL: 'Bolivia',\n  BES: 'Bonaire, Saint Eustatius and Saba ',\n  BIH: 'Bosnia and Herzegovina',\n  BWA: 'Botswana',\n  BVT: 'Bouvet Island',\n  BRA: 'Brazil',\n  IOT: 'British Indian Ocean Territory',\n  VGB: 'British Virgin Islands',\n  BRN: 'Brunei',\n  BGR: 'Bulgaria',\n  BFA: 'Burkina Faso',\n  BDI: 'Burundi',\n  KHM: 'Cambodia',\n  CMR: 'Cameroon',\n  CAN: 'Canada',\n  CPV: 'Cape Verde',\n  CYM: 'Cayman Islands',\n  CAF: 'Central African Republic',\n  TCD: 'Chad',\n  CHL: 'Chile',\n  CHN: 'China',\n  CXR: 'Christmas Island',\n  CCK: 'Cocos Islands',\n  COL: 'Colombia',\n  COM: 'Comoros',\n  COK: 'Cook Islands',\n  CRI: 'Costa Rica',\n  HRV: 'Croatia',\n  CUB: 'Cuba',\n  CUW: 'Curacao',\n  CYP: 'Cyprus',\n  CZE: 'Czech Republic',\n  COD: 'Democratic Republic of the Congo',\n  DNK: 'Denmark',\n  DJI: 'Djibouti',\n  DMA: 'Dominica',\n  DOM: 'Dominican Republic',\n  TLS: 'East Timor',\n  ECU: 'Ecuador',\n  EGY: 'Egypt',\n  SLV: 'El Salvador',\n  GNQ: 'Equatorial Guinea',\n  ERI: 'Eritrea',\n  EST: 'Estonia',\n  ETH: 'Ethiopia',\n  FLK: 'Falkland Islands',\n  FRO: 'Faroe Islands',\n  FJI: 'Fiji',\n  FIN: 'Finland',\n  FRA: 'France',\n  GUF: 'French Guiana',\n  PYF: 'French Polynesia',\n  ATF: 'French Southern Territories',\n  GAB: 'Gabon',\n  GMB: 'Gambia',\n  GEO: 'Georgia',\n  DEU: 'Germany',\n  GHA: 'Ghana',\n  GIB: 'Gibraltar',\n  GRC: 'Greece',\n  GRL: 'Greenland',\n  GRD: 'Grenada',\n  GLP: 'Guadeloupe',\n  GUM: 'Guam',\n  GTM: 'Guatemala',\n  GGY: 'Guernsey',\n  GNB: 'Guinea-Bissau',\n  GIN: 'Guinea',\n  GUY: 'Guyana',\n  HTI: 'Haiti',\n  HMD: 'Heard Island and McDonald Islands',\n  HND: 'Honduras',\n  HKG: 'Hong Kong',\n  HUN: 'Hungary',\n  ISL: 'Iceland',\n  IND: 'India',\n  IDN: 'Indonesia',\n  IRN: 'Iran',\n  IRQ: 'Iraq',\n  IRL: 'Ireland',\n  IMN: 'Isle of Man',\n  ISR: 'Israel',\n  ITA: 'Italy',\n  CIV: 'Ivory Coast',\n  JAM: 'Jamaica',\n  JPN: 'Japan',\n  JEY: 'Jersey',\n  JOR: 'Jordan',\n  KAZ: 'Kazakhstan',\n  KEN: 'Kenya',\n  KIR: 'Kiribati',\n  XKX: 'Kosovo',\n  KWT: 'Kuwait',\n  KGZ: 'Kyrgyzstan',\n  LAO: 'Laos',\n  LVA: 'Latvia',\n  LBN: 'Lebanon',\n  LSO: 'Lesotho',\n  LBR: 'Liberia',\n  LBY: 'Libya',\n  LIE: 'Liechtenstein',\n  LTU: 'Lithuania',\n  LUX: 'Luxembourg',\n  MAC: 'Macao',\n  MKD: 'Macedonia',\n  MDG: 'Madagascar',\n  MWI: 'Malawi',\n  MYS: 'Malaysia',\n  MDV: 'Maldives',\n  MLI: 'Mali',\n  MLT: 'Malta',\n  MHL: 'Marshall Islands',\n  MTQ: 'Martinique',\n  MRT: 'Mauritania',\n  MUS: 'Mauritius',\n  MYT: 'Mayotte',\n  MEX: 'Mexico',\n  FSM: 'Micronesia',\n  MDA: 'Moldova',\n  MCO: 'Monaco',\n  MNG: 'Mongolia',\n  MNE: 'Montenegro',\n  MSR: 'Montserrat',\n  MAR: 'Morocco',\n  MOZ: 'Mozambique',\n  MMR: 'Myanmar',\n  NAM: 'Namibia',\n  NRU: 'Nauru',\n  NPL: 'Nepal',\n  NLD: 'Netherlands',\n  NCL: 'New Caledonia',\n  NZL: 'New Zealand',\n  NIC: 'Nicaragua',\n  NER: 'Niger',\n  NGA: 'Nigeria',\n  NIU: 'Niue',\n  NFK: 'Norfolk Island',\n  PRK: 'North Korea',\n  MNP: 'Northern Mariana Islands',\n  NOR: 'Norway',\n  OMN: 'Oman',\n  PAK: 'Pakistan',\n  PLW: 'Palau',\n  PSE: 'Palestinian Territory',\n  PAN: 'Panama',\n  PNG: 'Papua New Guinea',\n  PRY: 'Paraguay',\n  PER: 'Peru',\n  PHL: 'Philippines',\n  PCN: 'Pitcairn',\n  POL: 'Poland',\n  PRT: 'Portugal',\n  PRI: 'Puerto Rico',\n  QAT: 'Qatar',\n  COG: 'Republic of the Congo',\n  REU: 'Reunion',\n  ROU: 'Romania',\n  RUS: 'Russia',\n  RWA: 'Rwanda',\n  BLM: 'Saint Barthelemy',\n  SHN: 'Saint Helena',\n  KNA: 'Saint Kitts and Nevis',\n  LCA: 'Saint Lucia',\n  MAF: 'Saint Martin',\n  SPM: 'Saint Pierre and Miquelon',\n  VCT: 'Saint Vincent and the Grenadines',\n  WSM: 'Samoa',\n  SMR: 'San Marino',\n  STP: 'Sao Tome and Principe',\n  SAU: 'Saudi Arabia',\n  SEN: 'Senegal',\n  SRB: 'Serbia',\n  SYC: 'Seychelles',\n  SLE: 'Sierra Leone',\n  SGP: 'Singapore',\n  SXM: 'Sint Maarten',\n  SVK: 'Slovakia',\n  SVN: 'Slovenia',\n  SLB: 'Solomon Islands',\n  SOM: 'Somalia',\n  ZAF: 'South Africa',\n  SGS: 'South Georgia and the South Sandwich Islands',\n  KOR: 'South Korea',\n  SSD: 'South Sudan',\n  ESP: 'Spain',\n  LKA: 'Sri Lanka',\n  SDN: 'Sudan',\n  SUR: 'Suriname',\n  SJM: 'Svalbard and Jan Mayen',\n  SWZ: 'Swaziland',\n  SWE: 'Sweden',\n  CHE: 'Switzerland',\n  SYR: 'Syria',\n  TWN: 'Taiwan',\n  TJK: 'Tajikistan',\n  TZA: 'Tanzania',\n  THA: 'Thailand',\n  TGO: 'Togo',\n  TKL: 'Tokelau',\n  TON: 'Tonga',\n  TTO: 'Trinidad and Tobago',\n  TUN: 'Tunisia',\n  TUR: 'Turkey',\n  TKM: 'Turkmenistan',\n  TCA: 'Turks and Caicos Islands',\n  TUV: 'Tuvalu',\n  VIR: 'U.S. Virgin Islands',\n  UGA: 'Uganda',\n  UKR: 'Ukraine',\n  ARE: 'United Arab Emirates',\n  GBR: 'United Kingdom',\n  UMI: 'United States Minor Outlying Islands',\n  URY: 'Uruguay',\n  USA: 'US',\n  UZB: 'Uzbekistan',\n  VUT: 'Vanuatu',\n  VAT: 'Vatican',\n  VEN: 'Venezuela',\n  VNM: 'Vietnam',\n  WLF: 'Wallis and Futuna',\n  ESH: 'Western Sahara',\n  YEM: 'Yemen',\n  ZMB: 'Zambia',\n  ZWE: 'Zimbabwe'\n};\n\n/**\n * Returns new array by combining proviences data for countries\n *\n * @param {Array} data\n * @param {Array}\n */\nexport const combineCountryData = (data = []) => {\n  const countries = {};\n  const worldwide = {\n    confirmed: 0,\n    recovered: 0,\n    deaths: 0,\n    active: 0,\n    lastUpdate: 0\n  };\n\n  data.forEach(\n    ({\n      countryRegion: country,\n      lastUpdate,\n      confirmed,\n      recovered,\n      deaths,\n      active,\n      iso3\n    }) => {\n      worldwide.confirmed += confirmed;\n      worldwide.recovered += recovered;\n      worldwide.deaths += deaths;\n      worldwide.active += active;\n\n      if (worldwide.lastUpdate < lastUpdate) {\n        worldwide.lastUpdate = lastUpdate;\n      }\n\n      if (countries[country]) {\n        countries[country].confirmed += confirmed;\n        countries[country].recovered += recovered;\n        countries[country].deaths += deaths;\n        countries[country].active += active;\n      } else {\n        countries[country] = {\n          country,\n          lastUpdate,\n          confirmed,\n          recovered,\n          deaths,\n          active,\n          iso3\n        };\n      }\n    }\n  );\n\n  return {\n    worldwide,\n    countriesData: Object.keys(countries).map(country => countries[country])\n  };\n};\n\nexport const sortOptions = {\n  Confirmed: 'confirmed',\n  Recovered: 'recovered',\n  Deaths: 'deaths'\n};\n","import React from 'react';\n\nimport Card from './Card';\nimport Loader from './Loader';\nimport useStats from '../hooks/useStats';\nimport { CACHE_EXPIRY } from '../utils/response';\n\nimport '../styles/stats.css';\n\nfunction Stats({\n  title,\n  url = 'https://covid19.mathdro.id/api',\n  previousDay: { confirmed, deaths } = {},\n}) {\n  const { stats, error, loading } = useStats(url, CACHE_EXPIRY * 3);\n  const formatDate = (date) =>\n    new Date(date).toLocaleDateString('en-US', {\n      weekday: 'short',\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n    });\n\n  return (\n    <div className=\"stats-container\">\n      <h2 className=\"stats-title\">{title}</h2>\n\n      {error ? <h4 className=\"error\">{error}</h4> : null}\n      {loading ? <Loader /> : null}\n\n      {stats && !loading && !error ? (\n        <>\n          <div className=\"confirmed-container\">\n            <div className=\"confirmed\">\n              <h5>Total Confirmed</h5>\n              <div className=\"numbers\">\n                <h3>\n                  {stats.error ? 0 : stats.confirmed.value.toLocaleString()}\n                </h3>\n                {/*confirmed ? (\n                  <span>\n                    ( ↑ {(stats.confirmed.value - confirmed).toLocaleString()} )\n                  </span>\n                ) : null*/}\n              </div>\n            </div>\n            {stats.error ? null : (\n              <p className=\"last-updated\">\n                Last Updated: {formatDate(stats.lastUpdate)}\n              </p>\n            )}\n          </div>\n          <div className=\"card-container\">\n            <Card\n              title=\"Recovered\"\n              count={stats.error ? 0 : stats.recovered.value}\n              total={stats.error ? 0 : stats.confirmed.value}\n              variant=\"success\"\n            />\n            <Card\n              title=\"Deaths\"\n              count={stats.error ? 0 : stats.deaths.value}\n              increase={\n                deaths && (stats.deaths.value - deaths).toLocaleString()\n              }\n              total={stats.error ? 0 : stats.confirmed.value}\n              variant=\"danger\"\n            />\n          </div>\n        </>\n      ) : null}\n    </div>\n  );\n}\n\nexport default React.memo(Stats);\n","import React from 'react';\n\nconst CountItem = React.memo(({ count = 0, type }) => {\n  return (\n    <div>\n      <h5 className={`color-${type}`}>{count.toLocaleString()}</h5>\n      <p>{type}</p>\n    </div>\n  );\n});\n\nfunction CountryItem({\n  style,\n  title,\n  count: { confirmed, recovered, deaths },\n}) {\n  return (\n    <div style={style} className=\"list-item\">\n      <div className=\"title\">\n        <h5>{title}</h5>\n      </div>\n      <div className=\"count\">\n        <CountItem count={confirmed} type=\"confirmed\" />\n        <CountItem count={recovered || 'NA'} type=\"recovered\" />\n        <CountItem count={deaths} type=\"deaths\" />\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(CountryItem);\n","import React from 'react';\n\nfunction Loader() {\n  return <div className=\"spinner\"></div>;\n}\nexport default Loader;\n","import React, { useState, useEffect } from 'react';\nimport { FixedSizeList } from 'react-window';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport useStats from '../hooks/useStats';\nimport CountryItem from './CountryItem';\nimport Loader from './Loader';\nimport { CACHE_EXPIRY } from '../utils/response';\n\nimport '../styles/list.css';\n\nimport { combineCountryData, sortOptions } from '../utils/utils';\n\nfunction CountryList() {\n  const { stats, loading, error } = useStats(\n    'https://covid19.mathdro.id/api/confirmed',\n    CACHE_EXPIRY * 3\n  );\n  const [countryWiseStats, setCountryWiseStats] = useState([]);\n  const [updatedData, setUpdatedData] = useState([]);\n\n  const hasError = error || stats ? stats.error : false;\n\n  useEffect(() => {\n    const { countriesData: data } = combineCountryData(stats);\n    const val = 'confirmed';\n    setCountryWiseStats(data);\n    setUpdatedData(data.sort((a, b) => b[val] - a[val]));\n  }, [stats]);\n\n  const sortByCategory = (val) => {\n    const data = countryWiseStats.slice();\n    setUpdatedData(data.sort((a, b) => b[val] - a[val]));\n  };\n\n  const filterByCountry = (val) => {\n    const data = countryWiseStats.slice();\n    setUpdatedData(\n      data.filter(({ country }) =>\n        country.toLowerCase().includes(val.toLowerCase().trim())\n      )\n    );\n  };\n\n  const CountryRow = ({ index, style }) => {\n    const { country, confirmed, recovered, deaths } = updatedData[index];\n\n    return (\n      <CountryItem\n        title={country}\n        count={{ confirmed, recovered, deaths }}\n        key={country}\n        style={style}\n      />\n    );\n  };\n\n  return (\n    <div className=\"stats-container\">\n      <h2 className=\"stats-title\">All Countries</h2>\n      {loading ? <Loader /> : null}\n\n      {stats && !loading ? (\n        <>\n          <div className=\"country-list-actions\">\n            <div>\n              <label htmlFor=\"countries\">Sort By:</label>\n              <select\n                id=\"countries\"\n                className=\"select\"\n                onChange={(e) => {\n                  sortByCategory(e.target.value);\n                }}\n              >\n                {Object.entries(sortOptions).map(([option, value]) => (\n                  <option key={value} value={value}>\n                    {option}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div>\n              <label htmlFor=\"country\">Country:</label>\n              <input\n                className=\"select\"\n                id=\"country\"\n                onChange={(e) => {\n                  filterByCountry(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <p className=\"info\">\n            Total Affected Countries: <b>{countryWiseStats.length}</b>\n          </p>\n\n          <AutoSizer>\n            {({ height, width }) => (\n              <FixedSizeList\n                height={500}\n                width={width}\n                itemSize={width > 480 ? 50 : 70}\n                itemCount={updatedData.length}\n                className=\"list-container\"\n              >\n                {CountryRow}\n              </FixedSizeList>\n            )}\n          </AutoSizer>\n        </>\n      ) : hasError ? (\n        <h5>Error Loading Data.</h5>\n      ) : null}\n    </div>\n  );\n}\n\nexport default CountryList;\n","import React, { useState } from 'react';\n\nimport Stats from './Stats';\nimport {\n  ISO3CountryCodes,\n  getSelectedCountry,\n  setSelectedCountry,\n} from '../utils';\n\nfunction CountrySelector() {\n  const [selectedCountryCode, setSelectedCountryCode] = useState(\n    getSelectedCountry() || 'IND'\n  );\n\n  return (\n    <>\n      <div className=\"selector\">\n        <label htmlFor=\"country\">Select Country:</label>\n        <select\n          id=\"country\"\n          className=\"select\"\n          onChange={(e) => {\n            setSelectedCountryCode(e.target.value);\n            setSelectedCountry(e.target.value)\n          }}\n          defaultValue={selectedCountryCode}\n        >\n          <option value=\"\">Select Country</option>\n          {Object.entries(ISO3CountryCodes).map(([code, country]) => (\n            <option\n              // defaultValue={selectedCountryCode}\n              key={code}\n              value={code}\n            >\n              {country}\n            </option>\n          ))}\n        </select>\n      </div>\n      {selectedCountryCode ? (\n        <Stats\n          title={ISO3CountryCodes[selectedCountryCode]}\n          url={`https://covid19.mathdro.id/api/countries/${selectedCountryCode}`}\n        ></Stats>\n      ) : null}\n    </>\n  );\n}\n\nexport default CountrySelector;\n","/**\n * Returns selected country if any\n */\nexport const getSelectedCountry = () => {\n  return localStorage.getItem('selected-country');\n};\n\n/**\n * Sets selected country value\n */\nexport const setSelectedCountry = (value) => {\n  return localStorage.setItem('selected-country', value);\n};\n","import React from 'react';\n\nfunction Header() {\n  return (\n    <header>\n      <div>\n        <h3>COVID-19 Tracker</h3>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useState } from 'react';\n\nimport '../styles/tab.css';\n\nfunction Tab({ name, handleClick, selected }) {\n  const classNames = selected\n    ? 'tab-header-item tab-selected'\n    : 'tab-header-item';\n\n  return (\n    <button onClick={handleClick} className={classNames}>\n      {name}\n    </button>\n  );\n}\n\nfunction TabHeder({ selectedIndex, handleClick, tabs }) {\n  return (\n    <div className=\"tab-header\">\n      {tabs.map(({ name }, index) => (\n        <Tab\n          name={name}\n          key={name}\n          selected={index === selectedIndex}\n          handleClick={() => {\n            handleClick(index);\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction Tabs({ tabs }) {\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  return (\n    <>\n      <TabHeder\n        tabs={tabs.map(({ name }) => ({ name }))}\n        handleClick={setSelectedTab}\n        selectedIndex={selectedTab}\n      />\n      {tabs[selectedTab].component}\n    </>\n  );\n}\n\nexport default Tabs;\n","import React, { lazy, Suspense } from 'react';\n\nimport {\n  Stats,\n  Header,\n  //  Footer,\n  Tabs,\n} from './components';\nimport useStats from './hooks/useStats';\n\nimport './App.css';\n\nconst CountryList = lazy(() => import('./components/CountryList'));\nconst CountrySelector = lazy(() => import('./components/CountrySelector'));\n\nfunction App() {\n  const tabs = [\n    {\n      name: 'Country List',\n      component: (\n        <Suspense fallback={<div>Loading...</div>}>\n          <CountryList />\n        </Suspense>\n      ),\n    },\n    {\n      name: 'Country Select',\n      component: (\n        <Suspense fallback={<div>Loading...</div>}>\n          <CountrySelector />\n        </Suspense>\n      ),\n    },\n  ];\n\n  const { stats } = useStats('https://covid19.mathdro.id/api/daily');\n  let daily = {};\n\n  if (stats && stats.length) {\n    const index = stats.length - 1;\n\n    daily = {\n      confirmed: stats[index].confirmed.total,\n      deaths: stats[index].deaths.total,\n    };\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <Stats title=\"Global\" previousDay={daily} />\n        <Tabs tabs={tabs} />\n      </div>\n      {/* <Footer /> */}\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}